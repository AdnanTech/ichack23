import random
import matplotlib.pyplot as plt

zones = [(0, 91), (92, 93), (94, 95), (96, 100)]
val = 98

zone_default = 0.5
data = []

for i in range(0, 100):
  if val == 100:
    val -=1
  else:
    if zones[0][0] <= val <= zones[0][1]:
      val += -4 if random.random() < zone_default / 2 / 2 / 2 else 2

    # base case
    elif zones[1][0] <= val <= zones[1][1]:
      val += -3 if random.random() < zone_default / 2 / 2 else 1

    elif zones[2][0] <= val <= zones[2][1]:
      val += -2 if random.random() < zone_default / 2 else 1
    
    #base case
    elif zones[3][0] <= val <= zones[3][1]:
      val += -1 if random.random() < zone_default else 1

  data.append(val)
  
def func():
  zones = [(0, 91), (92, 93), (94, 95), (96, 100)]
  val = 98

  if val == 100:
    val -=1
  else:
    if zones[0][0] <= val <= zones[0][1]:
      val += -4 if random.random() < zone_default / 2 / 2 / 2 else 2

    # base case
    elif zones[1][0] <= val <= zones[1][1]:
      val += -3 if random.random() < zone_default / 2 / 2 else 1

    elif zones[2][0] <= val <= zones[2][1]:
      val += -2 if random.random() < zone_default / 2 else 1
    
    #base case
    elif zones[3][0] <= val <= zones[3][1]:
      val += -1 if random.random() < zone_default else 1

  return val

import numpy as np
from scipy.ndimage import gaussian_filter1d

y = data
sigma = 1

x = np.linspace(0, len(y), len(y))
y_smooth = gaussian_filter1d(y, sigma)

fig, ax = plt.subplots()
ax.plot(x, y_smooth, '-')

ax.fill_between(x, 0, 91, color='red', alpha=0.3)
ax.fill_between(x, 92, 93, color='orange', alpha=0.3)
ax.fill_between(x, 94, 95, color='yellow', alpha=0.3)
ax.fill_between(x, 96, 100, color='grey', alpha=0.3)
plt.show()